.. _java-rs-get-started-connect-to-mongodb:

==================
Connect to MongoDB
==================

.. TODO: 
.. Add this sentence after the last sentence in the paragraph for implementing reactive streams subscribers. 
.. To learn more about the Java Reactive Streams API, see link here.

The Java Reactive Streams driver is an implementation of the Reactive Streams API, which consists of three components: 

- Publisher
- Subscriber
- Subscription

In this tutorial, you must implement Java Reactive Streams Subscribers to
query your Atlas database.

.. procedure::
   :style: connected

    .. step:: Implement Reactive Streams Subscribers

      In your project, create a package called ``helpers`` within the existing
      ``java`` package. Then, create a new Java file in the ``helpers`` package
      named ``SubscriberHelpers``.
      
      The following code is an implementation of five
      different ``Subscriber`` types used in your {+driver-short+} application.

      Copy and paste the following code 
      into the ``SubscriberHelpers`` file:
      
      .. literalinclude:: /includes/get-started/subscriber-helpers.java
         :language: java
         :copyable:

   .. step:: Create your {+driver-short+} Application
      
      In your project, create a new Java file in the ``Java`` package named 
      ``QueryDatabase`` . Copy and paste the following code into the ``QueryDatabase`` file:
      
      .. literalinclude:: /includes/get-started/query-database.java
         :language: java
         :copyable:

   .. step:: Assign the Connection String

      Replace the ``<connection string URI>`` placeholder with the 
      connection string that you copied from the :ref:`java-rs-get-started-connection-string`
      step of this guide.

   .. step:: Run your Application

      Run your application, either in your IDE or in your shell. The output
      shows that you have connected to MongoDB.

      .. code-block:: none

        {
           _id: ...,
           plot: 'A young man is accidentally sent 30 years into the past...',
           genres: [ 'Adventure', 'Comedy', 'Sci-Fi' ],
           ...
           title: 'Back to the Future',
           ...
         }


      .. tip::

         If you encounter an error, check whether you specified the
         proper connection string, and that you loaded the sample data.

After you complete these steps, you have a working application that
uses the driver to connect to your MongoDB deployment, queries the database,
and prints out the result.

.. include:: /includes/get-started/quickstart-troubleshoot.rst

.. button:: Next Steps
   :uri: /get-started/next-steps